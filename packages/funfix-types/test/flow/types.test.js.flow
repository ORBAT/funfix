/*!
 * Copyright (c) 2017-2018 by The Funfix Project Developers.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* @flow */

import { HK, Setoid, Functor } from "../../src"

type BoxURI = BoxURI

class Box<A> implements HK<BoxURI, A> {
  +_URI: BoxURI
  +_A: A
  value: A;
  constructor(value: A) { this.value = value }
}

class Module implements Setoid<Box<any>>, Functor<BoxURI> {
  equals(x, y): boolean {
    return (x : Box<any>).value === (y : Box<any>).value
  }

  map<A, B>(f: (a: A) => B, fa: HK<BoxURI, A>): Box<B> {
    return new Box(f((fa : any).value))
  }
}
